// DFS traversal
#include <bits/stdc++.h>
using namespace std;

class Graph{
    public:
      map<int, bool>vis;
      map<int, list<int>>adj;
      
      void addEdge(int v, int w);
      
      void  DFS(int v);
};

void Graph::addEdge(int v,int w)
{
    adj[v].push_back(w);
}

void Graph::DFS(int v)
{
    vis[v]=true;
    cout<<v<<" ";
    
    list<int>::iterator i;
    for(i=adj[v].begin(); i!=adj[v].end(); i++)
    {
        if(!vis[*i])
        {
            DFS(*i);
        }
    }
}

int main() {
    Graph g;
    g.addEdge(0,1);
    g.addEdge(0,2);
    g.addEdge(0,3);
    g.addEdge(2,4);
    
    g.DFS(0);
    
   
}
